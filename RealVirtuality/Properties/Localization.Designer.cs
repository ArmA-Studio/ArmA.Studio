//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RealVirtuality.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RealVirtuality.Properties.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Error.
        /// </summary>
        public static string PP_PARSE_E0_Unknown {
            get {
                return ResourceManager.GetString("PP_PARSE_E0_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command is not matching any known.
        /// </summary>
        public static string PP_PARSE_E1_UnknownDirective {
            get {
                return ResourceManager.GetString("PP_PARSE_E1_UnknownDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected end of command, got more content.
        /// </summary>
        public static string PP_PARSE_E2_UnexpectedAdittionalContent {
            get {
                return ResourceManager.GetString("PP_PARSE_E2_UnexpectedAdittionalContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier provided is not matching any previous.
        /// </summary>
        public static string PP_PARSE_E3_NoMatchingDefine {
            get {
                return ResourceManager.GetString("PP_PARSE_E3_NoMatchingDefine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to else operation is missing opening tag.
        /// </summary>
        public static string PP_PARSE_E4_ElseMissingOpenTag {
            get {
                return ResourceManager.GetString("PP_PARSE_E4_ElseMissingOpenTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to endif operation is missing opening tag.
        /// </summary>
        public static string PP_PARSE_E5_EndifMissingOpenTag {
            get {
                return ResourceManager.GetString("PP_PARSE_E5_EndifMissingOpenTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if operation lacks an identifier to check.
        /// </summary>
        public static string PP_PARSE_E5_MissingIdentifier {
            get {
                return ResourceManager.GetString("PP_PARSE_E5_MissingIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate any file matching provided path.
        /// </summary>
        public static string PP_PARSE_E6_IncludeNotFound {
            get {
                return ResourceManager.GetString("PP_PARSE_E6_IncludeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to include file: {0}.
        /// </summary>
        public static string PP_PARSE_E7_FailedToInclude {
            get {
                return ResourceManager.GetString("PP_PARSE_E7_FailedToInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EOF Reached.
        /// </summary>
        public static string SQF_PARSE_E0_EOFReached {
            get {
                return ResourceManager.GetString("SQF_PARSE_E0_EOFReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Assignment.
        /// </summary>
        public static string SQF_PARSE_E1_InvalidAssignment {
            get {
                return ResourceManager.GetString("SQF_PARSE_E1_InvalidAssignment", resourceCulture);
            }
        }
    }
}
