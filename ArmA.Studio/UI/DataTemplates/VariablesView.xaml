<DataTemplate
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:local="clr-namespace:ArmA.Studio;assembly=ArmA.Studio"
        xmlns:dc="clr-namespace:ArmA.Studio.DataContext;assembly=ArmA.Studio"
        xmlns:ae="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
        xmlns:ev="clr-namespace:ArmA.Studio.Data.UI.Eventing;assembly=ArmA.Studio.Data"
        xmlns:att="clr-namespace:ArmA.Studio.UI.Attached;assembly=ArmA.Studio"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:p="clr-namespace:ArmA.Studio.Properties;assembly=ArmA.Studio"
        xmlns:ctrl="clr-namespace:ArmA.Studio.UI.Controls;assembly=ArmA.Studio"
        DataType="{x:Type dc:VariablesViewPane}">
    <ListView ItemsSource="{Binding Variables}">
        <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridViewColumn Header="{x:Static p:Localization.VariableName}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border Background="Transparent"  ev:MouseLeftButtonDown.Command="{Binding CmdNameClick}">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EditName}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{Binding Name}"/>
                                </Border>
                                <TextBox Text="{Binding Name}" HorizontalAlignment="Stretch" att:LooseFocusOnKeyAttached.Key="Return" att:SelectFileNameOnFocusAttached.Attach="True" Height="16" Padding="0" BorderThickness="0">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding EditName}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="{x:Static p:Localization.VariableValue}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding Value}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Value, Converter={StaticResource IsStringNullConverter}}" Value="True">
                                                <Setter Property="Text" Value="{x:Static p:Localization.NotFound}"/>
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsUpdating}" Value="True">
                                                <Setter Property="Text" Value="{x:Static p:Localization.Updating}"/>
                                                <Setter Property="Foreground" Value="Yellow"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Name, Converter={StaticResource IsStringNullConverter}}" Value="True">
                                                <Setter Property="Text" Value=""/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
        <ListView.Style>
            <Style TargetType="ListView">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DebugContext.IsPaused, Source={x:Static local:Workspace.Instance}}" Value="False">
                        <!--<Setter Property="IsHitTestVisible" Value="False"/>-->
                        <Setter Property="Opacity" Value="0.75"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.Style>
    </ListView>
</DataTemplate>